<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Client_WPF">
	<SolidColorBrush x:Key="TransparentBrush" Color="transparent"/>
	<SolidColorBrush x:Key="BlackBrush" Color="Black"/>
	<ImageBrush x:Key="LightGrayArrow" ImageSource="Assets/SendingBtn-LightGray.png"/>
	<ImageBrush x:Key="GrayArrow" ImageSource="Assets/SendingBtn-Gray.png"/>
	<ImageBrush x:Key="ColorArrow" ImageSource="Assets/SendingBtn-Color.png"/>
	<LinearGradientBrush x:Key="ShadowBorder" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FFA3AEB9"/>
		<GradientStop Color="Transparent" Offset="0.9"/>
	</LinearGradientBrush>
	<Style x:Key="NoBordersTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderThickness="0" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
		<Style x:Key="NoBordersPasswordBox" TargetType="{x:Type PasswordBox}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type PasswordBox}">
						<Border x:Name="border" BorderThickness="0" SnapsToDevicePixels="True">
							<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="FocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="TransparentButton" TargetType="{x:Type Button}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="Background" Value="{StaticResource TransparentBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource TransparentBrush}"/>
		<Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
						<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="Center" Margin="1" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsDefaulted" Value="true">
							<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" TargetName="border" Value="{StaticResource TransparentBrush}"/>
							<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TransparentBrush}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Background" TargetName="border" Value="{StaticResource TransparentBrush}"/>
							<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TransparentBrush}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Background" TargetName="border" Value="{StaticResource TransparentBrush}"/>
							<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TransparentBrush}"/>
							<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource TransparentBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="SendingButton" TargetType="{x:Type Button}" BasedOn="{StaticResource TransparentButton}">
		<Setter Property="Background" Value="{StaticResource LightGrayArrow}"/>
		<Setter Property="Foreground" Value="{DynamicResource TransparentBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
						<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="Center" Margin="1" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" TargetName="border" Value="{StaticResource GrayArrow}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Background" TargetName="border" Value="{StaticResource ColorArrow}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Background" TargetName="border" Value="{StaticResource LightGrayArrow}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
